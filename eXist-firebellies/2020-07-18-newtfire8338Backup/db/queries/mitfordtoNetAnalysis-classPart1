xquery version "3.0";
declare default element namespace "http://www.tei-c.org/ns/1.0";
(: Goal: Want to grab contents of @ref attributes, and network based on who is addressed in the same files. We need plain text output for this, divided by tab separators:)
 (:Cardinality is an issue! When we tie things together :)
let $mitfordColl:=collection('/db/mitford/')/*
let $titles:= $mitfordColl/teiHeader//titleStmt/title
(:  :for $i in $titles
let $uri := tokenize($mitfordColl/base-uri(), "/")[last()]
return string-join((concat($i, $uri)), " &#x9;"):)

for $f in $mitfordColl

let $people := $f//text//persName/@ref
let $distinctPeeps := distinct-values($people)


for $p in $distinctPeeps
let $filePeep: = $f[.//text//persName/@ref = $p]//titleStmt/title
(: Note why I don't have to match here, no "=" in the predicate, because I've not broken out of XPath :)
let $otherPeeps := $f[.//text//persName/@ref = $p]//text//persName[not(@ref = $p)]/@ref
return 
    
    <thing>
        <person>{$p}</person>
        <file>{$filePeep/string()}</file>
        (:Cardinality is an issue here!:)
        <otherPerson>{string-join($otherPeeps, ", ")}</otherPerson>
        </thing>
