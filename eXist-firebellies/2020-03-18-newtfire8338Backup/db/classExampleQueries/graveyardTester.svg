<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="1000" viewBox="0,0,1200,1200"><g transform="translate(100, 500)"><text x="0" y="-480">Brush Creek Cemetery Section I: Count of the dead: 142</text><text x="0" y="-450">Count of the dead with surnames: 142</text><text x="0" y="-430">Count of distinct surnames: 56</text><text x="0" y="-410">Which distinct regions are represented where the family deathcount is greater than 3?</text><!--ebb: I asked this question to help me work out how many different regions would be represented on my stacked bar graph.
        I  wrote a FLWOR to make a list of the region names to output in a list here. I can also loop through this list to output an array I can use for color coding. I want each region to have its own color in my stacked graph.
        --><text x="0" y="-390">There are 7: Pennsylvania, Florida, California, West Virginia, Ontario, Ohio, Colorado</text><!--The concat function joins single strings together. String-join bundles multiple strings together and ties them with whatever punctuation I want to use. I can combine them together here.--><g id="legend"><!--Make a legend: Draw an SVG rectangle with no fill. Put inside its area some text elements followed by boxes to indicate color coding of each distinct region. --><rect x="600" y="-490" height="300" width="200" style="stroke:black; stroke-width: 1; fill: none"/><text x="630" y="-460">Legend:</text><!--I'm going to make a FLWOR that outputs each region in a text element next to a rectangle that contains an associated color, determined by position in a for-loop. --><g><text x="635" y="-430">Pennsylvania</text><rect x="730" y="-445" height="20" width="20" style="stroke: black; stroke-width: 1; fill: #99FFCC"/></g><g><text x="635" y="-400">Florida</text><rect x="730" y="-415" height="20" width="20" style="stroke: black; stroke-width: 1; fill: #CCCC99"/></g><g><text x="635" y="-370">California</text><rect x="730" y="-385" height="20" width="20" style="stroke: black; stroke-width: 1; fill: #CCCCFF"/></g><g><text x="635" y="-340">West Virginia</text><rect x="730" y="-355" height="20" width="20" style="stroke: black; stroke-width: 1; fill: #CCFFFF"/></g><g><text x="635" y="-310">Ontario</text><rect x="730" y="-325" height="20" width="20" style="stroke: black; stroke-width: 1; fill: #FFCC99"/></g><g><text x="635" y="-280">Ohio</text><rect x="730" y="-295" height="20" width="20" style="stroke: black; stroke-width: 1; fill: #FFFF99"/></g><g><text x="635" y="-250">Colorado</text><rect x="730" y="-265" height="20" width="20" style="stroke: black; stroke-width: 1; fill: #CCCCCC"/></g><g><!--ebb: This is to set the last box for unmarked records, which will look clear on the graph. --><text x="635" y="-220">Unmarked</text><rect x="730" y="-235" height="20" width="20" style="stroke: black; stroke-width: 1; fill: none"/></g></g><g id="graph"><!--bar graph here. --><!--X axis: --><line x1="0" y1="0" x2="600" y2="0" style="stroke: black; stroke-width: 2"/><text x="10" y="-290" style="text-anchor: start">Geographic Distribution of Families with more than 3 deaths in Brush Creek Section I</text><!--Y axis: --><line x1="0" y1="0" x2="0" y2="-240" style="stroke: black; stroke-width: 2"/><text x="-30" y="-120" style="text-anchor: middle; writing-mode: tb; glyph-orientation-vertical: 0;">Number of Deaths</text><!--horizontal hashmarks at top and midpoint on Y axis: --><line x1="-5" x2="5" y1="-240" y2="-240" style="stroke: black; stroke-width: 1"/><text x="-10" y="-240" style="text-anchor: end">12</text><line x1="-5" x2="5" y1="-120" y2="-120" style="stroke: black; stroke-width: 1"/><text x="-10" y="-120" style="text-anchor: end">6</text><g id="Helman"><!--surname labels--><text x="75" y="5" style="text-anchor: end" transform="rotate(-45,75,30)">Helman</text><!--total deathcount: put above top of bar --><text x="50" y="-255">12</text><rect x="50" y="-240" width="20" height="240" style="stroke: black; stroke-width:1; fill:none;"/><!--ebb: Make stacked bars based on counts in each region. To do this we need to be able to access each region, get its count, and **add** it to the bar below it. Let's try a for-loop that is based on numbers, for each member of a list of distinct values for a surname's regions that's output according to descending order.
NOTE: We may loop through distinct values of regions taken inside the FLWOR, get the count at each region, and output them by descending count, or build something like I did here by storing all the information in a global variable. No matter how you do it, you're going to need an **accumulator** array to add the count for each region to the counts of its predecessors in order to make a stacked bar graph. A stacked bar has to work so that the stack you're processing stands on top of the preceding ones.  
--><g class="regions"><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Pennsylvania_5" x="50" y="-100" width="20" height="100" style="stroke: black; stroke-width:1; fill: #99FFCC"/></g><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="West Virginia_3" x="50" y="-160" width="20" height="60" style="stroke: black; stroke-width:1; fill: #CCFFFF"/></g><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="California_1" x="50" y="-180" width="20" height="20" style="stroke: black; stroke-width:1; fill: #CCCCFF"/></g><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Ontario_1" x="50" y="-200" width="20" height="20" style="stroke: black; stroke-width:1; fill: #FFCC99"/></g><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Ohio_1" x="50" y="-220" width="20" height="20" style="stroke: black; stroke-width:1; fill: #FFFF99"/></g></g></g><g id="Gongaware"><!--surname labels--><text x="125" y="5" style="text-anchor: end" transform="rotate(-45,125,30)">Gongaware</text><!--total deathcount: put above top of bar --><text x="100" y="-235">11</text><rect x="100" y="-220" width="20" height="220" style="stroke: black; stroke-width:1; fill:none;"/><!--ebb: Make stacked bars based on counts in each region. To do this we need to be able to access each region, get its count, and **add** it to the bar below it. Let's try a for-loop that is based on numbers, for each member of a list of distinct values for a surname's regions that's output according to descending order.
NOTE: We may loop through distinct values of regions taken inside the FLWOR, get the count at each region, and output them by descending count, or build something like I did here by storing all the information in a global variable. No matter how you do it, you're going to need an **accumulator** array to add the count for each region to the counts of its predecessors in order to make a stacked bar graph. A stacked bar has to work so that the stack you're processing stands on top of the preceding ones.  
--><g class="regions"><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Pennsylvania_7" x="100" y="-140" width="20" height="140" style="stroke: black; stroke-width:1; fill: #99FFCC"/></g></g></g><g id="Brezler"><!--surname labels--><text x="175" y="5" style="text-anchor: end" transform="rotate(-45,175,30)">Brezler</text><!--total deathcount: put above top of bar --><text x="150" y="-135">6</text><rect x="150" y="-120" width="20" height="120" style="stroke: black; stroke-width:1; fill:none;"/><!--ebb: Make stacked bars based on counts in each region. To do this we need to be able to access each region, get its count, and **add** it to the bar below it. Let's try a for-loop that is based on numbers, for each member of a list of distinct values for a surname's regions that's output according to descending order.
NOTE: We may loop through distinct values of regions taken inside the FLWOR, get the count at each region, and output them by descending count, or build something like I did here by storing all the information in a global variable. No matter how you do it, you're going to need an **accumulator** array to add the count for each region to the counts of its predecessors in order to make a stacked bar graph. A stacked bar has to work so that the stack you're processing stands on top of the preceding ones.  
--><g class="regions"><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Pennsylvania_5" x="150" y="-100" width="20" height="100" style="stroke: black; stroke-width:1; fill: #99FFCC"/></g><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Colorado_1" x="150" y="-120" width="20" height="20" style="stroke: black; stroke-width:1; fill: #CCCCCC"/></g></g></g><g id="McCaulley"><!--surname labels--><text x="225" y="5" style="text-anchor: end" transform="rotate(-45,225,30)">McCaulley</text><!--total deathcount: put above top of bar --><text x="200" y="-135">6</text><rect x="200" y="-120" width="20" height="120" style="stroke: black; stroke-width:1; fill:none;"/><!--ebb: Make stacked bars based on counts in each region. To do this we need to be able to access each region, get its count, and **add** it to the bar below it. Let's try a for-loop that is based on numbers, for each member of a list of distinct values for a surname's regions that's output according to descending order.
NOTE: We may loop through distinct values of regions taken inside the FLWOR, get the count at each region, and output them by descending count, or build something like I did here by storing all the information in a global variable. No matter how you do it, you're going to need an **accumulator** array to add the count for each region to the counts of its predecessors in order to make a stacked bar graph. A stacked bar has to work so that the stack you're processing stands on top of the preceding ones.  
--><g class="regions"><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Pennsylvania_6" x="200" y="-120" width="20" height="120" style="stroke: black; stroke-width:1; fill: #99FFCC"/></g></g></g><g id="McCune"><!--surname labels--><text x="275" y="5" style="text-anchor: end" transform="rotate(-45,275,30)">McCune</text><!--total deathcount: put above top of bar --><text x="250" y="-115">5</text><rect x="250" y="-100" width="20" height="100" style="stroke: black; stroke-width:1; fill:none;"/><!--ebb: Make stacked bars based on counts in each region. To do this we need to be able to access each region, get its count, and **add** it to the bar below it. Let's try a for-loop that is based on numbers, for each member of a list of distinct values for a surname's regions that's output according to descending order.
NOTE: We may loop through distinct values of regions taken inside the FLWOR, get the count at each region, and output them by descending count, or build something like I did here by storing all the information in a global variable. No matter how you do it, you're going to need an **accumulator** array to add the count for each region to the counts of its predecessors in order to make a stacked bar graph. A stacked bar has to work so that the stack you're processing stands on top of the preceding ones.  
--><g class="regions"><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Pennsylvania_5" x="250" y="-100" width="20" height="100" style="stroke: black; stroke-width:1; fill: #99FFCC"/></g></g></g><g id="Woodruff"><!--surname labels--><text x="325" y="5" style="text-anchor: end" transform="rotate(-45,325,30)">Woodruff</text><!--total deathcount: put above top of bar --><text x="300" y="-115">5</text><rect x="300" y="-100" width="20" height="100" style="stroke: black; stroke-width:1; fill:none;"/><!--ebb: Make stacked bars based on counts in each region. To do this we need to be able to access each region, get its count, and **add** it to the bar below it. Let's try a for-loop that is based on numbers, for each member of a list of distinct values for a surname's regions that's output according to descending order.
NOTE: We may loop through distinct values of regions taken inside the FLWOR, get the count at each region, and output them by descending count, or build something like I did here by storing all the information in a global variable. No matter how you do it, you're going to need an **accumulator** array to add the count for each region to the counts of its predecessors in order to make a stacked bar graph. A stacked bar has to work so that the stack you're processing stands on top of the preceding ones.  
--><g class="regions"><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Pennsylvania_5" x="300" y="-100" width="20" height="100" style="stroke: black; stroke-width:1; fill: #99FFCC"/></g></g></g><g id="Lauffer"><!--surname labels--><text x="375" y="5" style="text-anchor: end" transform="rotate(-45,375,30)">Lauffer</text><!--total deathcount: put above top of bar --><text x="350" y="-115">5</text><rect x="350" y="-100" width="20" height="100" style="stroke: black; stroke-width:1; fill:none;"/><!--ebb: Make stacked bars based on counts in each region. To do this we need to be able to access each region, get its count, and **add** it to the bar below it. Let's try a for-loop that is based on numbers, for each member of a list of distinct values for a surname's regions that's output according to descending order.
NOTE: We may loop through distinct values of regions taken inside the FLWOR, get the count at each region, and output them by descending count, or build something like I did here by storing all the information in a global variable. No matter how you do it, you're going to need an **accumulator** array to add the count for each region to the counts of its predecessors in order to make a stacked bar graph. A stacked bar has to work so that the stack you're processing stands on top of the preceding ones.  
--><g class="regions"><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Pennsylvania_5" x="350" y="-100" width="20" height="100" style="stroke: black; stroke-width:1; fill: #99FFCC"/></g></g></g><g id="King"><!--surname labels--><text x="425" y="5" style="text-anchor: end" transform="rotate(-45,425,30)">King</text><!--total deathcount: put above top of bar --><text x="400" y="-95">4</text><rect x="400" y="-80" width="20" height="80" style="stroke: black; stroke-width:1; fill:none;"/><!--ebb: Make stacked bars based on counts in each region. To do this we need to be able to access each region, get its count, and **add** it to the bar below it. Let's try a for-loop that is based on numbers, for each member of a list of distinct values for a surname's regions that's output according to descending order.
NOTE: We may loop through distinct values of regions taken inside the FLWOR, get the count at each region, and output them by descending count, or build something like I did here by storing all the information in a global variable. No matter how you do it, you're going to need an **accumulator** array to add the count for each region to the counts of its predecessors in order to make a stacked bar graph. A stacked bar has to work so that the stack you're processing stands on top of the preceding ones.  
--><g class="regions"><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Pennsylvania_3" x="400" y="-60" width="20" height="60" style="stroke: black; stroke-width:1; fill: #99FFCC"/></g><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Florida_1" x="400" y="-80" width="20" height="20" style="stroke: black; stroke-width:1; fill: #CCCC99"/></g></g></g><g id="Bostwick"><!--surname labels--><text x="475" y="5" style="text-anchor: end" transform="rotate(-45,475,30)">Bostwick</text><!--total deathcount: put above top of bar --><text x="450" y="-95">4</text><rect x="450" y="-80" width="20" height="80" style="stroke: black; stroke-width:1; fill:none;"/><!--ebb: Make stacked bars based on counts in each region. To do this we need to be able to access each region, get its count, and **add** it to the bar below it. Let's try a for-loop that is based on numbers, for each member of a list of distinct values for a surname's regions that's output according to descending order.
NOTE: We may loop through distinct values of regions taken inside the FLWOR, get the count at each region, and output them by descending count, or build something like I did here by storing all the information in a global variable. No matter how you do it, you're going to need an **accumulator** array to add the count for each region to the counts of its predecessors in order to make a stacked bar graph. A stacked bar has to work so that the stack you're processing stands on top of the preceding ones.  
--><g class="regions"><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Pennsylvania_4" x="450" y="-80" width="20" height="80" style="stroke: black; stroke-width:1; fill: #99FFCC"/></g></g></g><g id="Vogel"><!--surname labels--><text x="525" y="5" style="text-anchor: end" transform="rotate(-45,525,30)">Vogel</text><!--total deathcount: put above top of bar --><text x="500" y="-95">4</text><rect x="500" y="-80" width="20" height="80" style="stroke: black; stroke-width:1; fill:none;"/><!--ebb: Make stacked bars based on counts in each region. To do this we need to be able to access each region, get its count, and **add** it to the bar below it. Let's try a for-loop that is based on numbers, for each member of a list of distinct values for a surname's regions that's output according to descending order.
NOTE: We may loop through distinct values of regions taken inside the FLWOR, get the count at each region, and output them by descending count, or build something like I did here by storing all the information in a global variable. No matter how you do it, you're going to need an **accumulator** array to add the count for each region to the counts of its predecessors in order to make a stacked bar graph. A stacked bar has to work so that the stack you're processing stands on top of the preceding ones.  
--><g class="regions"><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Pennsylvania_4" x="500" y="-80" width="20" height="80" style="stroke: black; stroke-width:1; fill: #99FFCC"/></g></g></g><g id="Walthour"><!--surname labels--><text x="575" y="5" style="text-anchor: end" transform="rotate(-45,575,30)">Walthour</text><!--total deathcount: put above top of bar --><text x="550" y="-95">4</text><rect x="550" y="-80" width="20" height="80" style="stroke: black; stroke-width:1; fill:none;"/><!--ebb: Make stacked bars based on counts in each region. To do this we need to be able to access each region, get its count, and **add** it to the bar below it. Let's try a for-loop that is based on numbers, for each member of a list of distinct values for a surname's regions that's output according to descending order.
NOTE: We may loop through distinct values of regions taken inside the FLWOR, get the count at each region, and output them by descending count, or build something like I did here by storing all the information in a global variable. No matter how you do it, you're going to need an **accumulator** array to add the count for each region to the counts of its predecessors in order to make a stacked bar graph. A stacked bar has to work so that the stack you're processing stands on top of the preceding ones.  
--><g class="regions"><g><!--<text>checking $accumYVal: {$accumYVal}</text>--><rect class="Pennsylvania_3" x="550" y="-60" width="20" height="60" style="stroke: black; stroke-width:1; fill: #99FFCC"/></g></g></g></g></g></svg>