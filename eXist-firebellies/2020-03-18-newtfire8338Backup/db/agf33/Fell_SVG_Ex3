xquery version "3.1";
declare default element namespace "http://www.w3.org/2000/svg"; 
declare namespace tei="http://www.tei-c.org/ns/1.0";
declare variable $mitfordColl := collection ('/db/mitford');
declare variable $lettersColl := collection('/db/mitford/letters');
declare variable $letterFiles := $lettersColl/*;
declare variable $countLetterFiles := count($letterFiles);
declare variable $letterDates := $lettersColl//tei:teiHeader//tei:msDesc//tei:head/tei:date/@when;
declare variable $letterYears := $letterDates/tokenize(string(), '-')[1];
declare variable $minLetterYear := xs:integer(min($letterYears));
declare variable $maxLetterYear := xs:integer(max($letterYears));
declare variable $totalLetterYears := $maxLetterYear - $minLetterYear;
declare variable $stretchFactor := 365;

<svg width="500" height="3000">
   <g transform="translate(30, 100)">
      
      <line x1="50" y1="0" x2="50" y2="{($totalLetterYears * $stretchFactor)}" stroke="#3333ff" stroke-width="3" /> 
      
         {
         for $i in (0 to $totalLetterYears)
         let $currentYear := $minLetterYear + $i
         let $matchingDates := $letterYears[contains(., $currentYear)]
         return
             <g>
             
                <line x1="40" y1="{$i * $stretchFactor}" x2="60" y2="{$i * $stretchFactor}" stroke="purple" stroke-width="2"/>
                <text x="70" y="{$i * $stretchFactor}" color="green">{$currentYear}</text>
               <!--ebb: Your plot is generating an error here in trying to plot the radius of your circle.    <circle cx="50" cy="{$i * $stretchFactor}" r="{count($letterDates[contains(., $minLetterYear + $i)])*2}" stroke="maroon" fill="lightgrey" stroke-width="4"/> 
               You created a variable here in your for loop for $matchingDates calculated on $i, so I tried replacing that and retrieved circles for your output. 
               -->
     <circle cx="50" cy="{$i * $stretchFactor}" r="{count($matchingDates) * 2}" stroke="maroon" fill="lightgrey" stroke-width="4"/>          
            
        </g>
         }
      
   </g>
   
</svg>
(: ebb: What's missing here, of course, is the plot of the second line following Haydon's letters. Take a look at how we plotted that in our posted solution. Basically you need to work with the format-date() function to return a the number of days into a year is a given ISO date. For example, it returns day 44 (of 365) for the date of the first Haydon letter. You add that to integer value of the year in order to set its date on the plot. See the posted solution on the DHClassHub here: https://github.com/ebeshero/DHClass-Hub/tree/master/Solutions/SVG/SVG_Ex3 and feel free to add some line comments there for some extra points on your homework score.
 Score 8/10  :)
